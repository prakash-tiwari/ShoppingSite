{"version":3,"sources":["components/Login.tsx","Item/Items.style.ts","Item/Items.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","ShoppingPage/ShoppingPage.style.ts","ShoppingPage/ShoppingPage.tsx","components/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Login","useState","mailId","setMailId","pwd","setPwd","errorValue","setErrorValue","helperTextVal","setHelperTextVal","avatarStyle","backgroundColor","margin","history","useHistory","Grid","Paper","elevation","style","padding","alignment","height","width","Avatar","TextField","label","error","helperText","placeholder","fullWidth","required","onChange","e","target","value","type","Button","color","variant","onClick","push","Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","price","disableElevation","CartItem","addToCart","removeFromCart","className","amount","toFixed","ButtonGroup","size","aria-label","id","Divider","aside","useStyles","makeStyles","theme","createStyles","root","borderRadius","textAlign","Cart","cartItems","modalVal","setModalVal","modalText","setModalText","classes","calculateTotal","items","reduce","ack","ModalBody","Card","alignItems","background","CardContent","Typography","component","length","map","noWrap","Modal","open","onClose","aria-labelledby","aria-describedby","position","display","getProducts","IconButton","a","fetch","json","flexGrow","menuButton","marginRight","spacing","About","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","clickedItem","prev","find","LinearProgress","AppBar","Toolbar","edge","Badge","badgeContent","Drawer","anchor","container","xs","sm","client","QueryClient","Main","QueryClientProvider","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6b05d03.chunk.js","sourcesContent":["import  { useState } from 'react'\r\n\r\nimport  Grid  from '@material-ui/core/Grid';\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login=() =>{\r\n\r\n    const [mailId, setMailId] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [errorValue, setErrorValue] = useState(false);\r\n    const [helperTextVal, setHelperTextVal] = useState(\"\");\r\n    \r\n    const paperStyle={padding :20, alignment:\"center\",  height:'70vh',width:500, margin:\"20px auto\"}\r\n    const avatarStyle={backgroundColor:'#1bbd7e', margin: \"auto\"}\r\n    const btnstyle={margin:'8px 0'}\r\n    let history = useHistory();\r\n\r\n    const AboutPage = () =>\r\n    {\r\n        if(mailId===\"prakash\" && pwd ===\"prakash\")\r\n        {             \r\n            history.push('/main');\r\n        }\r\n        else\r\n         {  \r\n             setErrorValue(true)\r\n           setHelperTextVal(\"Incorrect credentils\")\r\n         }\r\n    }\r\n\r\n    return(\r\n        <Grid>\r\n            <Paper elevation={10} style={paperStyle}>\r\n                <Grid>\r\n                     <Avatar style={avatarStyle}><LockOutlinedIcon/></Avatar>\r\n                     <br />\r\n                    <h2 style={avatarStyle}>Sign In</h2>\r\n                </Grid>\r\n                <br />\r\n                <TextField \r\n                    label='Username' \r\n                    error = {errorValue}\r\n                    helperText = {helperTextVal}\r\n                    placeholder='Enter username' \r\n                    fullWidth \r\n                    required\r\n                    onChange =  {(e) => setMailId(e.target.value)}\r\n                />\r\n                <TextField \r\n                    label='Password'   \r\n                    error = {errorValue}\r\n                    helperText = {helperTextVal}\r\n                    placeholder='Enter password' \r\n                    type='password' \r\n                    fullWidth \r\n                    required\r\n                    onChange =  {(e) => setPwd(e.target.value)}\r\n                    />\r\n\r\n                   <br /> \r\n                   <br /> \r\n                <Button \r\n                    type='submit' \r\n                    color='primary' \r\n                    variant=\"contained\" \r\n                    style={btnstyle} \r\n                    fullWidth\r\n                    onClick={AboutPage}\r\n                >\r\n                Sign in\r\n                </Button>\r\n        \r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    background-color: white;\r\n    border: 1px solid #ddd;\r\n    border-radius: auto;\r\n    margin: auto;\r\n    padding: auto;\r\n     width: inherit;\r\n    \r\n    Grid{\r\n        \r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n    }\r\n\r\n    img{              \r\n        border-radius: 8px;\r\n        object-fit: cover;\r\n        padding: 20px;\r\n        width: 300px;        \r\n        margin: auto;\r\n        height: 300px;     \r\n        objectFit: 'cover';   \r\n    }\r\n    \r\n  Button{\r\n    border-radius: 0 0 20px 20px;\r\n    padding: auto;\r\n    margin: auto;\r\n    width: auto;\r\n  }\r\n\r\n`;","import { Grid } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n// Types\r\nimport { CartItemType } from '../ShoppingPage/ShoppingPage';\r\n// Styles\r\nimport { Wrapper } from './Items.style';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  handleAddToCart: (clickedItem: CartItemType) => void;\r\n};\r\n\r\n\r\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => {\r\n\r\n\r\n  return (\r\n   \r\n    <Wrapper>\r\n      <Grid>\r\n      <img src={item.image} alt={item.title} />\r\n      \r\n        <h3>{item.title}</h3>\r\n       \r\n        <h3>Rs. {item.price}</h3>\r\n      </Grid>\r\n      <div style={{ padding: 20 }}>\r\n  \r\n      <Button \r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      disableElevation\r\n      onClick={() => handleAddToCart(item)}>Add to cart</Button>\r\n      </div>\r\n    </Wrapper>\r\n  \r\n  )\r\n};\r\n\r\nexport default Item;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\nimg{\r\n    border: 1px solid #ddd;\r\n    border-radius: 50px;\r\n    object-fit: cover;\r\n    padding: 60px;\r\n    width: 150px;\r\n\r\n}\r\n\r\nButtonGroup{\r\n    width:300px\r\n}\r\n\r\n`;","import Button  from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n// Types\r\nimport { CartItemType } from '../ShoppingPage/ShoppingPage';\r\n// Styles\r\nimport { Wrapper } from './CartItem.styles';\r\n\r\ntype Props = {\r\n  item: CartItemType;\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\n\r\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (    \r\n  <Wrapper>\r\n    <div>\r\n      <h3>{item.title}</h3>\r\n      <div className='information'>\r\n        <p>Price: Rs. {item.price}</p>\r\n        <p>Total: Rs. {(item.amount * item.price).toFixed(2)}</p>\r\n        <img src={item.image} alt={item.title} />\r\n        \r\n      </div>  \r\n      <br />    \r\n      <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"outlined primary button group\">\r\n      <Button\r\n          size='small'\r\n          disableElevation\r\n          variant='contained'\r\n          color=\"primary\"\r\n          onClick={() => removeFromCart(item.id)}\r\n        >\r\n             -\r\n        </Button>\r\n        <Button><p>{item.amount} </p> </Button>\r\n        <Button\r\n          size='small'\r\n          disableElevation\r\n          variant='contained'\r\n          color=\"primary\"\r\n          onClick={() => addToCart(item)}\r\n        >\r\n          +\r\n        </Button>\r\n        </ButtonGroup>      \r\n    </div>\r\n    <br />\r\n    <Divider />\r\n  </Wrapper>\r\n);\r\n\r\nexport default CartItem;","import styled from 'styled-components';\r\n\r\nexport const Wrapper =  styled.aside`\r\n    color: secondary;\r\n    font-family: Arial, Helvetice, sans-serif;\r\n    width: 500px;\r\n    padding: 20px;\r\n    \r\n\r\n`;  \r\n\r\n\r\n\r\n//``- double backticks","import CartItem from '../CartItem/CartItem';\r\nimport { Wrapper } from './Cart.styles';\r\nimport { CartItemType } from '../ShoppingPage/ShoppingPage';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button  from '@material-ui/core/Button';\r\n\r\nimport { useState } from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: 'white',\r\n      borderRadius: 3,\r\n      textAlign : \"center\",\r\n      height: 48,      \r\n      padding: \"50px 50px\",\r\n    },\r\n  }),\r\n);\r\n\r\n\r\ntype Props = {\r\n  cartItems: CartItemType[];\r\n  addToCart: (clickedItem: CartItemType) => void;\r\n  removeFromCart: (id: number) => void;\r\n};\r\n\r\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart }) => {\r\n\r\n  const [modalVal, setModalVal] = useState(false);\r\n  const [modalText, setModalText] = useState(\"\");\r\n   \r\n  const classes = useStyles();\r\n  \r\n  const calculateTotal = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount * item.price, 0);\r\n\r\n    \r\n    const handleClose = () => {\r\n      setModalVal(false);\r\n    };\r\n\r\n    const ModalBody = (\r\n         <Card style={{\r\n                alignItems: \"center\",         \r\n                background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n                margin:\"auto\",\r\n                height: 200,\r\n                width: 500\r\n              }} \r\n            >\r\n            <CardContent>\r\n              <Typography \r\n                variant=\"h5\" component=\"h2\"\r\n                className={classes.root}>\r\n                  {modalText}\r\n           </Typography>\r\n           </CardContent>\r\n         </Card>\r\n    );\r\n\r\n\r\n  const checkOut = () => {\r\n    if(cartItems.length>0){\r\n      \r\n      setModalText(\"Thank you for shopping with us... \")\r\n      setModalVal(true);             \r\n    }\r\n  else{    \r\n    setModalText(\"Your cart is empty...\");\r\n    setModalVal(true);\r\n  }\r\n  \r\n  \r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h2>Your Shopping Cart</h2> \r\n      <h2>Total RS: {calculateTotal(cartItems).toFixed(2)}</h2>\r\n      <Divider />\r\n      {cartItems.length === 0 ? <p>No items in cart.</p> : null}\r\n      {cartItems.map(item => (        \r\n        <CartItem\r\n          key={item.id}\r\n          item={item}\r\n          addToCart={addToCart}\r\n          removeFromCart={removeFromCart}\r\n        />            \r\n      ))}\r\n      <Typography variant=\"h2\" noWrap>\r\n      <Divider />\r\n      Total RS: {calculateTotal(cartItems).toFixed(2)}\r\n      </Typography>\r\n      <Button\r\n          size='small'\r\n          disableElevation\r\n          variant=\"contained\" \r\n          style = {{  margin : \"auto\", \r\n                      width: 500, \r\n                      padding: 10, \r\n                      backgroundColor: \"#006600\"\r\n                    }}\r\n          onClick={checkOut}\r\n        >\r\n          Check Out\r\n        </Button>\r\n    <Modal\r\n        open={modalVal}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        style = {{\r\n          position: \"absolute\",\r\n          display: \"flex\",         \r\n          margin: \"auto\"\r\n        }}\r\n      >\r\n        {ModalBody}\r\n      </Modal>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Cart;","import styled from 'styled-components';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 30px;\r\n`;\r\n\r\nexport const StyledButton = styled(IconButton)`\r\n  position: fixed;\r\n  z-index: 100;\r\n  right: 10px;\r\n  top: 20px;\r\n`;","import { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Components\r\nimport Item from '../Item/Items';\r\nimport Cart from '../Cart/Cart';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\n// Styles\r\nimport { Wrapper } from './ShoppingPage.style';\r\n\r\n// Types\r\nexport type CartItemType = {\r\n  id: number;\r\n  category: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  title: string;\r\n  amount: number;\r\n};\r\n\r\nconst getProducts = async (): Promise<CartItemType[]> =>\r\n  await (await fetch('https://fakestoreapi.com/products')).json();\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n  // Shopping page starts\r\nconst About = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [cartOpen, setCartOpen] = useState(false);\r\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\r\n  \r\n  let history = useHistory();\r\n\r\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\r\n    'products',\r\n    getProducts\r\n  );\r\n  \r\n  const getTotalItems = (items: CartItemType[]) =>\r\n    items.reduce((ack: number, item) => ack + item.amount, 0);\r\n\r\n  const handleAddToCart = (clickedItem: CartItemType) => {\r\n    setCartItems(prev => {\r\n      // 1. Is the item already added in the cart?\r\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\r\n\r\n      if (isItemInCart) {\r\n        return prev.map(item =>\r\n          item.id === clickedItem.id\r\n            ? { ...item, amount: item.amount + 1 }\r\n            : item\r\n        );\r\n      }\r\n      // First time the item is added\r\n      return [...prev, { ...clickedItem, amount: 1 }];\r\n    });\r\n  };\r\n\r\n  const handleRemoveFromCart = (id: number) => {\r\n    setCartItems(prev =>\r\n      prev.reduce((ack, item) => {\r\n        if (item.id === id) {\r\n          if (item.amount === 1) return ack;\r\n          return [...ack, { ...item, amount: item.amount - 1 }];\r\n        } else {\r\n          return [...ack, item];\r\n        }\r\n      }, [] as CartItemType[])\r\n    );\r\n  };\r\n\r\n  // logging out the user...\r\n  const callLogOut = () => {\r\n        history.push('/ShoppingSite');\r\n  }\r\n\r\n  if (isLoading) return <LinearProgress />;\r\n  if (error) return <div>Something went wrong ...</div>;\r\n\r\n  return (\r\n    \r\n   \r\n    <Wrapper>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" \r\n          className={classes.menuButton} \r\n          color=\"inherit\" \r\n          aria-label=\"menu\"\r\n          onClick={() => setCartOpen(true)}\r\n          >              \r\n                 <Badge badgeContent={getTotalItems(cartItems)} color='error' >\r\n                   <AddShoppingCartIcon />\r\n                </Badge>\r\n          \r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Welcome Prakash\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={callLogOut}>LogOut</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <br />\r\n      <Drawer anchor='left' open={cartOpen} onClose={() => setCartOpen(false)}>\r\n        <Cart\r\n          cartItems={cartItems}\r\n          addToCart={handleAddToCart}\r\n          removeFromCart={handleRemoveFromCart}\r\n        />\r\n      </Drawer>\r\n     \r\n      <Grid container spacing={3}>\r\n        {data?.map(item => (\r\n          <Grid item key={item.id} xs={12} sm={4}>\r\n            <Item item={item} handleAddToCart={handleAddToCart} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>    \r\n    </Wrapper>\r\n    \r\n  );\r\n};\r\n\r\nexport default About;","import { QueryClient, QueryClientProvider } from 'react-query';\r\nimport About from '../ShoppingPage/ShoppingPage'\r\n\r\n\r\n\r\nconst client = new QueryClient();\r\n\r\nconst Main = () => {\r\n    return (\r\n    <QueryClientProvider client={client}>   \r\n   <About />\r\n  </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\r\n\r\nimport { Route } from \"react-router\";\r\nimport Login from './components/Login'\r\nimport Main from './components/main'\r\nimport { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n      <Switch>\r\n        <Route \r\n        exact={true}\r\n        path=\"/ShoppingSite\">\r\n            <Login />\r\n        </Route>\r\n        <Route \r\n        exact={true}\r\n        path=\"/main\"\r\n        >\r\n            <Main />\r\n        </Route>    \r\n    </Switch>\r\n    </BrowserRouter>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n \r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}